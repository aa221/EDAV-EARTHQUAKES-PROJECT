# Results

```{r}
library(ggplot2)

library(janitor)
library('openxlsx')
library(tidyr)
library(stringr)
library(dplyr)
```



```{r}
## state and earthquakes table
state_earthquakes <- read.csv("data/earthquakes_by_state.csv")
state_pop <- read.xlsx("data/state_pop.xlsx")
```


```{r}
# The third row has the column names

state_pop <- state_pop %>%
  row_to_names(row_number = 2) %>%
  clean_names()

colnames(state_pop)[1] = 'State'

state_pop
```

```{r}

# Remove rows 
state_pop_long <- state_pop %>%
  select(-c(census, estimates_base,x2010))


state_pop_long

```
```{r}
# Assuming you have loaded the tidyr package
# install.packages("tidyr")

# Pivot the table so we have one row per year and state
population_per_state <- state_pop_long %>%
  pivot_longer(cols = starts_with("x"),
               names_to = "year",
               values_to = "population") %>%
  arrange(State, year)

# Display the updated data frame
population_per_state
```

```{r}

# Remove the 'x' and '.'
population_per_state <- population_per_state %>%
  mutate(year = str_remove(year, "x"))

population_per_state <- population_per_state %>%
  mutate(State = str_remove(State, "."))

population_per_state
```

```{r}
state_earthquakes_selected <- state_earthquakes %>%
  select(NAME,MAGNITUDE)
```

```{r}
state_earthquakes_selected_cleaned
```







```{r,fig.width=4, fig.height=5}
# Group by state, calculate the average magnitude across all years


# Assuming your data frame is named 'your_data'

# Drop rows with NA values
state_earthquakes_selected_cleaned <- na.omit(state_earthquakes_selected)

# Select one row per state
one_per_state <- state_earthquakes_selected_cleaned %>%
  distinct(NAME, .keep_all = TRUE)



ggplot(one_per_state, aes(x = MAGNITUDE)) +
  geom_bar(stat = "identity", aes(y=fct_reorder(NAME, MAGNITUDE)),fill = "skyblue") +
  labs(title = "Average Magnitude Per State", x =  "Average Magnitude", y = "State") +
  theme_minimal()

```
As we can see, the average magnitude of earth quakes is highest in Nevada. This is interesting because it seems as though the highest magnitutde earthquakes. Nevada, Missouri, Washington are all on the west coast, which brings up the argument that states on the west coast are more impacted by Earthquakes, in terms of how strong they are. There could be an argument that these states have a higher population than others so we wil verify that soon.



```{r}
## use the population from the most recent year
newest_year_pop <- population_per_state %>% 
  filter(year == 2019) %>%
  select(-year)  # Drop the 'year' column
newest_year_pop


```

```{r}
library(dplyr)


# Perform left join for population and state. 
joined_df <- left_join(newest_year_pop, state_earthquakes_selected_cleaned, by = c("State" = "NAME"))
joined_df
```

```{r}
joined_df = joined_df %>% count('State')
# Display the column names


joined_df <- joined_df[-1, ]

## remove rows with numbers
rows_with_numbers <- grep("\\d", joined_df$State)

# Remove rows with numbers
joined_df <- joined_df[-rows_with_numbers, ]

# Identify rows with ":" in the "State" column
rows_with_colon <- grepl(":", joined_df$State)

# Remove rows with ":"
joined_df <- joined_df[!rows_with_colon, ]

```



```{r}
rows_with_numbers
```


```{r,fig.width=4, fig.height=5}

# Create a horizontal bar chart

library(forcats)
# Order the data by frequency in descending order
joined_df <- joined_df[order(-joined_df$freq), ]

# Set wider figure dimensions
options(repr.plot.width = 10, repr.plot.height = 6)



ggplot(joined_df, aes(x = freq)) +
  geom_bar(stat = "identity", aes(y=fct_reorder(State, freq)),fill = "skyblue") +
  labs(title = "Earthquake Count Per State", x = "Earthquake Count", y = "State") +
  theme_minimal()
```
As we can see, California has the most number of Earthquake's, next is Washington, then Nevada. As a result the argument regarding western vs eastern regions is still very relevant to this variable. Despite this it is less relevant as New York and Illinois are up there. Thee are highly populated areas and thus we will see the correlation between population and earthquake count below.


```{r}
pop_joined <- left_join(newest_year_pop, state_earthquakes_selected_cleaned, by = c("State" = "NAME"))

pop_joined = pop_joined %>% count('State')
# Display the column names



pop_joined <- pop_joined[-1, ]

## remove rows with numbers
rows_with_numbers <- grep("\\d", pop_joined$State)

# Remove rows with numbers
pop_joined <- pop_joined[-rows_with_numbers, ]

# Identify rows with ":" in the "State" column
rows_with_colon <- grepl(":", pop_joined$State)

# Remove rows with ":"
pop_joined <- pop_joined[!rows_with_colon, ]

pop_joined = left_join(pop_joined, newest_year_pop, by = c("State" = "State"))



pop_joined$freq <- log(pop_joined$freq)
pop_joined$population <- log(pop_joined$population) ## took log so we can see it 

```





```{r}
## get magnitude 
pop_joined <- left_join(pop_joined, one_per_state, by = c("State" = "NAME"))
pop_joined
```




```{r}
# Scatter plot for population and freq
ggplot(pop_joined, aes(x = population, y = freq)) +
  geom_point() +
  labs(title = "Scatter Plot of Population vs Frequency", x = "Population", y = "Frequency") 

```

